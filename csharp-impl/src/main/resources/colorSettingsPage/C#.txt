/*
 * Block comment
 */
[<attribute_name>Obsolete</attribute_name>]
public class <class_name>MyClass</class_name> {
    public static event <delegate_method_name>MyDelegateMethod</delegate_method_name> <static_event_name>StaticEvent</static_event_name>
    public event <delegate_method_name>MyDelegateMethod</delegate_method_name> <instance_event_name>InstanceEvent</instance_event_name>

    public static <class_name>String</class_name> <static_field>HELLO</static_field> = "Hello";
    public int <instance_field>INT_VALUE</instance_field> = 1;

    public static <class_name>String</class_name> <static_property>StaticProperty</static_property> => "Called";
    public int <instance_property>InstanceProperty</instance_property> => 1;

    public unsafe void <method_name>Main</method_name>(<class_name>String</class_name>[] <parameter>args</parameter>) {
        "ExtensionCall".<extension_call>Call</extension_call>();

        <static_call>Main</static_call>(new <class_name>String</class_name>[] {});
    }
}

<macro_keyword>#if</macro_keyword> <macro_variable>DEFINE</macro_variable>
public <soft_keyword>partial</soft_keyword> class <class_name>Generic</class_name><<generic_parameter_name>T</generic_parameter_name>> {
    public <generic_parameter_name>T</generic_parameter_name> <instance_field>myField</instance_field> = default(<generic_parameter_name>T</generic_parameter_name>);
}
<macro_keyword>#else</macro_keyword>
<disabled_block>public class Generic {

}
</disabled_block><macro_keyword>#endif</macro_keyword>

<doc_comment>/// <doc_tag><summary></doc_tag></doc_comment>
<doc_comment>/// Some summary</doc_comment>
<doc_comment>/// <doc_tag></summary></doc_tag></doc_comment>
public delegate void <delegate_method_name>MyDelegateMethod</delegate_method_name>();

public static class <class_name>StringExtensions</class_name> {
    public <constructor_name>StringExtensions</constructor_name>() {
    }

    <doc_comment>/// <doc_tag><param <doc_attribute>name="param"</doc_attribute>></doc_tag>test parameter<doc_tag></param></doc_tag></doc_comment>
    public static void <method_name>Call</method_name>(this <class_name>String</class_name> <parameter>param</parameter>) {
        // line comment
        <parameter>param</parameter>.<instance_call>toString</instance_call>();
        int? <local_var>nulllableInt</local_var> = <implicit_or_explicit>1</implicit_or_explicit>;
        int b = (<implicit_or_explicit>int</implicit_or_explicit>) <local_var>nulllableInt</local_var>;
    }

    public void <method_name>SomeMethod</method_name>() {
        <delegate_method_name>MyDelegateMethod</delegate_method_name> <local_var>localVar</local_var> = <method_ref>SomeMethod</method_ref>;
    }
}

public enum <enum_name>SomeEnum</enum_name> {
    <constant>VALUE1</constant>,
    <constant>VALUE2</constant>
}

public interface <interface_name>ErrorMarker</interface_name> {}