CSHARP_FILE
  CSharpTypeDeclarationImpl [TYPE_DECLARATION]
    CSharpStubModifierListImpl [MODIFIER_LIST]
      PsiElement(PUBLIC_KEYWORD)('public')
    PsiWhiteSpace(' ')
    PsiElement(CLASS_KEYWORD)('class')
    PsiWhiteSpace(' ')
    CSharpStubIdentifierImpl [IDENTIFIER]
      PsiElement(IDENTIFIER)('MyController')
    PsiWhiteSpace('\n')
    PsiElement(LBRACE)('{')
    PsiWhiteSpace('\n\t')
    CSharpMethodDeclarationImpl [METHOD_DECLARATION]
      CSharpStubModifierListImpl [MODIFIER_LIST]
        <empty list>
      CSharpStubNativeTypeImpl [NATIVE_TYPE]
        PsiElement(VOID_KEYWORD)('void')
      PsiWhiteSpace(' ')
      CSharpStubIdentifierImpl [IDENTIFIER]
        PsiElement(IDENTIFIER)('test')
      CSharpStubParameterListImpl [PARAMETER_LIST]
        PsiElement(LPAR)('(')
        PsiElement(RPAR)(')')
      PsiWhiteSpace('\n\t')
      CSharpBlockStatementImpl(BLOCK_STATEMENT)
        PsiElement(LBRACE)('{')
        PsiWhiteSpace('\n\t\t')
        CSharpForStatementImpl(FOR_STATEMENT)
          PsiElement(FOR_KEYWORD)('for')
          PsiElement(LPAR)('(')
          CSharpLocalVariableImpl(LOCAL_VARIABLE)
            CSharpNativeTypeImpl(NATIVE_TYPE)
              PsiElement(INT_KEYWORD)('int')
            PsiWhiteSpace(' ')
            CSharpIdentifierImpl(IDENTIFIER)
              PsiElement(IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            CSharpConstantExpressionImpl(CONSTANT_EXPRESSION)
              PsiElement(INTEGER_LITERAL)('0')
            PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CSharpLocalVariableImpl(LOCAL_VARIABLE)
            CSharpIdentifierImpl(IDENTIFIER)
              PsiElement(IDENTIFIER)('b')
            PsiWhiteSpace(' ')
            PsiElement(EQ)('=')
            PsiWhiteSpace(' ')
            CSharpConstantExpressionImpl(CONSTANT_EXPRESSION)
              PsiElement(INTEGER_LITERAL)('2')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace(' ')
          CSharpBinaryExpressionImpl(BINARY_EXPRESSION)
            CSharpReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('i')
            PsiWhiteSpace(' ')
            CSharpOperatorReferenceImpl(OPERATOR_REFERENCE)
              PsiElement(LT)('<')
            PsiWhiteSpace(' ')
            CSharpConstantExpressionImpl(CONSTANT_EXPRESSION)
              PsiElement(INTEGER_LITERAL)('100')
          PsiElement(SEMICOLON)(';')
          PsiWhiteSpace(' ')
          CSharpPostfixExpressionImpl(POSTFIX_EXPRESSION)
            CSharpReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('i')
            CSharpOperatorReferenceImpl(OPERATOR_REFERENCE)
              PsiElement(PLUSPLUS)('++')
          PsiElement(COMMA)(',')
          PsiWhiteSpace(' ')
          CSharpPostfixExpressionImpl(POSTFIX_EXPRESSION)
            CSharpReferenceExpressionImpl(REFERENCE_EXPRESSION)
              PsiElement(IDENTIFIER)('b')
            PsiWhiteSpace(' ')
            CSharpOperatorReferenceImpl(OPERATOR_REFERENCE)
              PsiElement(PLUSPLUS)('++')
          PsiElement(RPAR)(')')
          PsiWhiteSpace('\n\t\t')
          CSharpBlockStatementImpl(BLOCK_STATEMENT)
            PsiElement(LBRACE)('{')
            PsiWhiteSpace('\n\t\t')
            PsiElement(RBRACE)('}')
        PsiWhiteSpace('\n\t')
        PsiElement(RBRACE)('}')
    PsiWhiteSpace('\n')
    PsiElement(RBRACE)('}')